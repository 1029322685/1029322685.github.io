<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>JavaScript学习笔记（一）</title>
    <url>/2020/02/26/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h2 id="概念："><a href="#概念：" class="headerlink" title="概念："></a>概念：</h2><p>客户端脚本语言，不需要编译直接就可以被浏览器解析执行。运行在客户端浏览器，每个浏览器都有JavaScript的解析引擎。<br>由ECMAScript、BOM和DOM构成。</p>
<h4 id="功能："><a href="#功能：" class="headerlink" title="功能："></a>功能：</h4><p>可以增强用户和HTML页面的交互过程，可以控制HTML元素，让页面有一些动态效果，增强用户体验。</p>
<h2 id="ECMAScript：客户端脚本语言标准。"><a href="#ECMAScript：客户端脚本语言标准。" class="headerlink" title="ECMAScript：客户端脚本语言标准。"></a>ECMAScript：客户端脚本语言标准。</h2><h4 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h4><ol>
<li><p>与HTML的结合方式</p>
<ul>
<li><p>内部js：定义&lt;script&gt;标签，在标签体中写js代码。</p>
<blockquote>
<p>&lt;script&gt;js代码</script></p>
</blockquote>
</li>
<li><p>外部js：定义&lt;script&gt;标签，通过src属性引入外部的js文件。</p>
<blockquote>
<p>&lt;script src=”文件名.js”&gt;</script></p>
</blockquote>
</li>
</ul>
<p><strong>注意：</strong>&lt;script&gt;标签可以定义在HTML页面的任意位置、也可以定义多个，但是定义的位置会影响执行顺序。</p>
</li>
<li><p>注释</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">&#x2F;&#x2F;单行注释</span><br><span class="line">&#x2F;*</span><br><span class="line">多行注释</span><br><span class="line">*&#x2F;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></li>
<li><p>数据类型</p>
<ul>
<li>原始数据类型（基本数据类型）：<ol>
<li>number：数字。整数/小数/NaN</li>
<li>string：字符串。字符/字符串</li>
<li>boolean：true/false</li>
<li>null：一个对象为空的占位符</li>
<li>undefi：未定义。如果一个变量没有给初始化值，则会被默认赋值为undef</li>
</ol>
</li>
<li>引用数据类型（对象）</li>
</ul>
</li>
<li><p>变量<br>JavaScript的变量是弱类型变量，在申请变量存储空间时不定义数据类型。<br><strong>语法：</strong></p>
<blockquote>
<p>var 变量名=变量值</p>
</blockquote>
</li>
<li><p>运算符</p>
<ul>
<li><p>一元运算符</p>
<ol>
<li>++：自增</li>
<li>–：自减</li>
<li>+(-)：正（负）号。在js中如果运算数不是运算所要求的类型，js引擎会自动将运算数进行类型转换。例如：<blockquote>
<p>var b = +”123”;  //原本b应该是字符串类型123，但是由于正号的转换，b变成了数值类型123<br>var a = +”abc”  //字符串abc会被转为NaN<br>var c = true  //转为1<br>var d = false //转为0</p>
</blockquote>
</li>
</ol>
</li>
<li><p>算术运算符<br><strong>+ 、- 、* 、/</strong></p>
</li>
<li><p>赋值运算符<br><strong>=</strong></p>
</li>
<li><p>比较运算符<br><strong>&gt; 、&lt; 、&gt;= 、&lt;= 、== 、===(全等于)</strong></p>
<ul>
<li><p>类型相同直接比较，字符串的比较按照字典顺序逐一比较，直到比出大小为止。</p>
<blockquote>
<p>3&gt;4  //false<br>“abc”&gt;”acd”  //第二位c大于b 返回false</p>
</blockquote>
</li>
<li><p>类型不同，先转换类型在比较</p>
<blockquote>
<p>“123”&gt;123  //false<br>“123”==123  //false  由于类型不同，不能直接比，返回false。此时要用===（全等于）</p>
</blockquote>
</li>
</ul>
</li>
<li><p>逻辑运算符<br><strong>&amp;&amp; 、|| 、!</strong><br>注意：其他类型转boolean</p>
<ol>
<li>number：0或NaN为false，其余为true</li>
<li>string：除了空字符串（””），其余为true</li>
<li>null&amp;undef：都是假</li>
<li>对象：所有对象都是true</li>
</ol>
</li>
<li><p>三元运算符<br><strong>? 、:</strong></p>
<blockquote>
<p>var a = 3;<br> var b = 4;<br> var c = a &gt; b ? 1 : 0;  // 如果a&gt;b 则c=1，否则c=0</p>
</blockquote>
</li>
</ul>
</li>
<li><p>流程控制语句</p>
<ul>
<li>if …else…</li>
<li>switch 在js中可以接受任意类型的数据</li>
<li>while</li>
<li>do…while</li>
<li>for</li>
</ul>
</li>
</ol>
<ul>
<li><p>九九乘法表小项目：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>九九乘法表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      td&#123;</span><br><span class="line">         border: 1px solid;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.write(<span class="string">"&lt;table align='center'&gt;"</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.write(<span class="string">"&lt;tr&gt;"</span>)</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">1</span>; j &lt;= i; j++)&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">document</span>.write(<span class="string">"&lt;td&gt;"</span>)</span></span><br><span class="line"><span class="javascript">          <span class="built_in">document</span>.write(i + <span class="string">"*"</span> + j + <span class="string">"="</span> + (i*j) +<span class="string">"&amp;nbsp;&amp;nbsp;&amp;nbsp;"</span>);</span></span><br><span class="line"><span class="javascript">          <span class="built_in">document</span>.write(<span class="string">"&lt;/td&gt;"</span>)</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.write(<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.write(<span class="string">"&lt;/tr&gt;"</span>)</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.write(<span class="string">"&lt;/table&gt;"</span>)</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="基本对象"><a href="#基本对象" class="headerlink" title="基本对象"></a>基本对象</h4><h6 id="Function函数-方法-对象："><a href="#Function函数-方法-对象：" class="headerlink" title="Function函数(方法)对象："></a>Function函数(方法)对象：</h6><ol>
<li><p>创建：</p>
<blockquote>
<p>var 方法名 = new Function(参数列表, 方法体);</p>
</blockquote>
<blockquote>
<p> function 方法名称（参数列表）{<br> 方法体<br>}</p>
</blockquote>
<blockquote>
<p>var 方法名称 = function(形式参数列表){<br>方法体<br>}</p>
</blockquote>
</li>
<li><p>方法</p>
</li>
<li><p>属性：</p>
<ul>
<li>length：代表形参个数</li>
</ul>
</li>
<li><p>特点：</p>
<ul>
<li>方法定义时，形参的类型不用写,返回值也不用写。</li>
<li>方法是一个对象，定义名称相同的方法，会覆盖之前的。</li>
<li>在js中方法的调用值与方法名称有关，与参数列表无关。</li>
<li>在方法声明中，有一个隐藏的内置对象（数组），arguments封装所有的实际参数。<blockquote>
<p>求任意个数的和：</p>
</blockquote>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    function add()&#123;</span><br><span class="line">        var sum &#x3D; 0;</span><br><span class="line">        for (var i &#x3D; 0; i &lt; arguments.length; i++)&#123;</span><br><span class="line">            sum +&#x3D; arguments[i];</span><br><span class="line">        &#125;</span><br><span class="line">        return sum;</span><br><span class="line">    &#125;</span><br><span class="line">    var sum &#x3D; add(1, 2, 3, 4);</span><br><span class="line">    alert(sum);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></li>
<li><p>调用：</p>
<blockquote>
<p>方法名称（实际参数列表）;</p>
</blockquote>
</li>
</ol>
</li>
</ul>
<h6 id="Array："><a href="#Array：" class="headerlink" title="Array："></a>Array：</h6><ol>
<li><p>创建：</p>
<blockquote>
<p>var arr = new Array(元素列表);</p>
</blockquote>
<blockquote>
<p> var arr = new Array(默认长度);</p>
</blockquote>
<blockquote>
<p>var arr = [元素列表];</p>
</blockquote>
</li>
<li><p>方法：</p>
<ul>
<li>join()： 将数组中的元素按照指定的分隔符拼接为字符串</li>
<li>push()：列表末尾进行追加</li>
</ul>
</li>
<li><p>属性：</p>
<ul>
<li>length：代表数组的长度</li>
</ul>
</li>
<li><p>特点：</p>
<ul>
<li>JS中，数组元素的类型可变</li>
<li>JS中，数组的长度可变</li>
</ul>
</li>
</ol>
<h6 id="Boolean"><a href="#Boolean" class="headerlink" title="Boolean"></a>Boolean</h6><h6 id="Date："><a href="#Date：" class="headerlink" title="Date："></a>Date：</h6><ol>
<li><p>创建：</p>
<blockquote>
<p>var date = new Date();</p>
</blockquote>
</li>
<li><p>方法：</p>
<ul>
<li>toLocaleString()：返回当前date对象对应的时间本地字符串格式</li>
<li>getTime()：返回当前日期对象描述的时间至1970年1月1日零点的毫秒值差（用于时间戳）</li>
</ul>
</li>
</ol>
<h6 id="Math："><a href="#Math：" class="headerlink" title="Math："></a>Math：</h6><ol>
<li>方法：<ul>
<li>random()：返回0~1的随机数</li>
<li>ceil(x)：对数字向上取整</li>
<li>floor(x)：对数字向下取整</li>
<li>round(x)：把数字四舍五入为最接近的整数</li>
</ul>
</li>
<li>属性：<ul>
<li>PI：圆周率</li>
</ul>
</li>
<li>特点：<br>Math对象不用创建，直接使用。</li>
</ol>
<h6 id="Number："><a href="#Number：" class="headerlink" title="Number："></a>Number：</h6><ol>
<li><p>创建：</p>
<blockquote>
<p>var arr = new Array(元素列表);</p>
</blockquote>
</li>
<li><p>方法：</p>
</li>
<li><p>属性：</p>
<ul>
<li>length：代表数组的长度</li>
</ul>
</li>
<li><p>特点：</p>
</li>
</ol>
<h6 id="String："><a href="#String：" class="headerlink" title="String："></a>String：</h6><h6 id="RegExp："><a href="#RegExp：" class="headerlink" title="RegExp："></a>RegExp：</h6><p><strong>正则表达式：</strong> 定义字符串的组成规则。</p>
<ol>
<li>单个字符：[]<br>如：[a] [ab] [a-zA-Z0-9]<br>特殊符号代表特殊含义的单个字符：<ul>
<li>\d：单个数字字符[0-9]</li>
<li>\w：单个单词字符[a-zA-Z0-9]</li>
</ul>
</li>
<li>量词符号：<ul>
<li>?：表示出现0次或1次</li>
<li>*：表示出现0次或多次</li>
<li>+：表示出现1次或多次</li>
<li>{m,n}：表示m&lt;=数量&lt;=n<ul>
<li>m如果缺省{,n}：最多n次</li>
<li>n如果缺省{m,}：最少n次</li>
</ul>
</li>
</ul>
</li>
<li>开始结束符号：<ul>
<li>^：开始</li>
<li>$：结束</li>
</ul>
</li>
</ol>
<p><strong>正则对象：</strong></p>
<ol>
<li><p>创建</p>
<blockquote>
<p>var reg = new RegExp(“正则表达式”);</p>
</blockquote>
<blockquote>
<p>var reg = /正则表达式/;</p>
</blockquote>
</li>
<li><p>方法</p>
<ul>
<li>test()：验证指定的字符串是否符合定义的规范，返回值为Boolean</li>
</ul>
</li>
</ol>
<h6 id="Global"><a href="#Global" class="headerlink" title="Global:"></a>Global:</h6><ol>
<li><p>特点：全局对象，这个Global中封装的方法不需要对象就可以直接调用。方法名();</p>
</li>
<li><p>方法：</p>
<ul>
<li><p>encodeURI()：URL编码，只对汉字进行编码</p>
</li>
<li><p>decodeURI()：URL解码</p>
</li>
<li><p>encodeURIComponent()：URL编码，编码的字符更多</p>
</li>
<li><p>dncodeURIComponent()：URL解码</p>
</li>
<li><p>parseInt()：将字符串转为数字。逐一判断每一个字符是否为数字，直到不是数字位置，将前边数字部分转为number。</p>
<blockquote>
<p>“123” –&gt; 123<br>“123abc”  –&gt; 123</p>
</blockquote>
</li>
<li><p>isNaN()：判断一个值是否是NaN。NaN参与的==比较返回结果均为false，只能通过该方法判断。</p>
</li>
<li><p>eval()：将JavaScript的字符串转为脚本并执行。</p>
<blockquote>
<p>var jscode = “alert(123)”;  //原本为字符串<br>eval(jscode);  //通过eval()方法解析字符串片段</p>
</blockquote>
</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>JSP课程学习</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML标签回顾</title>
    <url>/2020/02/19/HTML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h4 id="文本标签"><a href="#文本标签" class="headerlink" title="文本标签"></a>文本标签</h4><ol>
<li>i：斜体</li>
<li>b：加粗</li>
<li>font：字体标签</li>
<li>结合CSS使用的标签</li>
<li>div：每一个div占满一整行。块级标签。</li>
</ol>
<h4 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h4><ol>
<li>table：表格<ul>
<li>width 宽度</li>
<li>border 边框</li>
<li>cellpadding 定义内容与单元格之间的距离</li>
<li>cellspacing 定义单元格之间的距离</li>
</ul>
</li>
<li>tr：行</li>
<li>td：单元格<ul>
<li>colspan：合并列</li>
<li>rowspan：合并行</li>
</ul>
</li>
<li>th：表头单元格（内容会自动居中并加粗）</li>
<li>&lt;caption&gt;：表格标题，在表格上方、剧中</li>
<li>&lt;thead&gt;：表示表格的头部份</li>
<li>&lt;tbody&gt;：表示表格的体部份</li>
<li>&lt;tfoot&gt;：表示表格的脚部份</li>
</ol>
<h4 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h4><p>form：用于定义表单。可定义一个代表采集用户数据的范围。</p>
<ol>
<li><p>action：指定提交数据的URL</p>
</li>
<li><p>method：指定提交方式</p>
<ul>
<li>get：<ol>
<li>请求参数会在地址栏中显示，会封装到请求行中</li>
<li>请求参数大小有限制</li>
<li>不太安全</li>
</ol>
</li>
<li>post：<ol>
<li>请求参数不会在地址栏中显示，会封装到请求行中</li>
<li>请求参数大小没有限制</li>
<li>较为安全</li>
</ol>
</li>
</ul>
</li>
</ol>
<h4 id="表单项标签"><a href="#表单项标签" class="headerlink" title="表单项标签"></a>表单项标签</h4><p><strong>input：可以通过type属性值改变元素展示样式。</strong></p>
<h6 id="type"><a href="#type" class="headerlink" title="type"></a>type</h6><ul>
<li>text：文本框<ul>
<li>placeholder：指定输入框的提示信息，当输入框内容发生变化，会自动清空提示信息</li>
</ul>
</li>
<li>password：密码框</li>
<li>radio：单选框<ol>
<li>要想实现单选，name属性值要一致</li>
<li>给每个单选框提供value属性，指定其被选中后提交的值</li>
<li>checked属性，可以指定默认值</li>
</ol>
</li>
<li>check：复选框<ol>
<li>要想实现选择，name属性值要一致</li>
<li>给每个复选框提供value属性，指定其被选中后提交的值</li>
<li>checked属性，可以指定默认值</li>
</ol>
</li>
<li>file：文件选择框</li>
<li>hidden：隐藏域</li>
<li>按钮：<ol>
<li>submit：提交按钮，用于提交表单</li>
<li>button：普通按钮</li>
<li>image：图片提交按钮。</li>
</ol>
<strong>lable：标签。其中的for属性一般会和inpu的id属性值对应。</strong><br><strong>select：下拉列表</strong><ul>
<li>option：定义可选的列表项</li>
</ul>
<strong>textarea：文本域</strong></li>
</ul>
]]></content>
      <categories>
        <category>HTML标签</category>
      </categories>
      <tags>
        <tag>HTML</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>JSP学习笔记</title>
    <url>/2020/02/10/JSP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="WEB-INFO目录结构"><a href="#WEB-INFO目录结构" class="headerlink" title="WEB-INFO目录结构"></a>WEB-INFO目录结构</h2><p><strong>WEB-INF</strong> 是Java的WEB应用的安全目录，客户端上访问不到，只有服务端才能访问。<br><strong>web.xml</strong> 是项目部署文件。<br><strong>class文件夹</strong> 用于存放.class文件。<br><strong>lib文件夹</strong> 存放项目所需jar包.</p>
<h2 id="JSP页面元素构成"><a href="#JSP页面元素构成" class="headerlink" title="JSP页面元素构成"></a>JSP页面元素构成</h2><h6 id="静态内容"><a href="#静态内容" class="headerlink" title="静态内容"></a>静态内容</h6><p>HTML静态文件体</p>
<h6 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h6><ul>
<li>page指令： 位于jsp页面顶端，同一个页面可以有多个page指令。</li>
<li>language：指定jsp页面使用的脚本语言，默认为Java。</li>
<li>import：引用脚本中使用到的类文件。</li>
<li>contentType：指定jsp页面编码方式，默认为text/html，ISO-8859-1。</li>
<li>include指令：将一个外部文件嵌入到当前jsp文件中，并解析页面中的jsp语句。</li>
<li>taglib指令：使用标签库定义新的标签，在jsp页面中启用定制行为。</li>
</ul>
<p><strong>示例：</strong><br>       <code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</code></p>
<h6 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h6><p>​    HTML注释：<br>​        <code>&lt;!-- html注释，客户端可见 --&gt;</code><br>​    JSP注释：<br>​        <code>&lt;%-- jsp注释，客户端不可见 --%&gt;</code><br>​    JSP脚本中可使用Java注释。</p>
<h6 id="小脚本"><a href="#小脚本" class="headerlink" title="小脚本"></a>小脚本</h6><p><code>&lt;%out.println(&quot;这是jsp脚本&quot;)%&gt;</code></p>
<h6 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h6><p>在jsp页面中定义变量或者发方法。<br><code>&lt;! String s = &quot;张三&quot;;&gt;</code></p>
<h6 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h6><p>在jsp页面中执行的表达式。<br><code>&lt;%=1+1 %&gt; //注意表达式后面不写;</code></p>
<h2 id="JSP内置对象"><a href="#JSP内置对象" class="headerlink" title="JSP内置对象"></a>JSP内置对象</h2><p>jsp内置对象是web容器创建的一组对象，不使用new关键词就可以使用的内置对象，例如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">int</span>[] value = &#123;<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>&#125;;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i:value)&#123;</span><br><span class="line">            out.println(i);  <span class="comment">// out就是内置对象</span></span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br></pre></td></tr></table></figure>
<h4 id="jsp九大内置对象"><a href="#jsp九大内置对象" class="headerlink" title="jsp九大内置对象"></a>jsp九大内置对象</h4><h6 id="常用的五个"><a href="#常用的五个" class="headerlink" title="常用的五个:"></a>常用的五个:</h6><ol>
<li><strong>out：</strong> JspWriter类的实例，向客户端输出内容的常用对象。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>out内置对象<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    缓冲区大小：<span class="tag">&lt;<span class="name">%=out.getBufferSize()%</span>&gt;</span>byte<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    缓冲区剩余大小：<span class="tag">&lt;<span class="name">%=out.getRemaining()%</span>&gt;</span>byte<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    是否自动清空缓冲区：<span class="tag">&lt;<span class="name">%=out.isAutoFlush()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<strong>预览效果：</strong><br><img src="/images/jspStudy/out.png" alt="图片加载失败"></li>
<li><strong>request：</strong> HttpServletRequest类的实例。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>requesr内置对象<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Request内置对象<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">            // 设置请求默认的编码，解决页面中文乱码问题</span></span><br><span class="line"><span class="tag">            <span class="attr">request.setCharacterEncoding</span>("<span class="attr">UTF-8</span>");</span></span><br><span class="line"><span class="tag">            // 存储此请求中的属性</span></span><br><span class="line"><span class="tag">            <span class="attr">request.setAttribute</span>("<span class="attr">passwd</span>", "<span class="attr">123456</span>");</span></span><br><span class="line"><span class="tag">        %&gt;</span></span><br><span class="line">        用户名：<span class="tag">&lt;<span class="name">%=request.getParameter("username")</span> %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        爱好：<span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">            <span class="attr">if</span> (<span class="attr">request.getParameterValues</span>("<span class="attr">favorite</span>")!=<span class="string">null)</span> &#123;</span></span><br><span class="line"><span class="tag">                <span class="attr">String</span>[] <span class="attr">favorites</span> = <span class="string">request.getParameterValues(</span>"<span class="attr">favorite</span>");</span></span><br><span class="line">                for (int i = 0; i &lt; favorites.length; i++) &#123;</span><br><span class="line">                    out.println(favorites[i] + "&amp;nbsp<span class="symbol">&amp;nbsp;</span>");</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            %&gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        密码： <span class="tag">&lt;<span class="name">%=request.getAttribute("passwd")%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        请求体的MIME类型：<span class="tag">&lt;<span class="name">%=request.getContentType()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        协议类型及版本号：<span class="tag">&lt;<span class="name">%=request.getProtocol()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        服务器主机名：<span class="tag">&lt;<span class="name">%=request.getServerName()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        服务器端口号：<span class="tag">&lt;<span class="name">%=request.getServerPort()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        请求文件的长度：<span class="tag">&lt;<span class="name">%=request.getContentLength()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        请求客户端的IP地址：<span class="tag">&lt;<span class="name">%=request.getRemoteAddr()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        请求的上下文路径：<span class="tag">&lt;<span class="name">%=request.getContextPath()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<p> <strong>预览效果：</strong><br> <img src="/images/jspStudy/request.png" alt="图片加载失败"><br> 3. <strong>response：</strong> HttpServletResponse类的实例。<br> <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">    <span class="attr">response.setContentType</span>("<span class="attr">text</span>/<span class="attr">html</span>; <span class="attr">charset</span>=<span class="string">utf-8</span>");</span></span><br><span class="line">    out.print("&lt;h1&gt;response内置对象&lt;/h1&gt;");</span><br><span class="line">    out.print("<span class="tag">&lt;<span class="name">hr</span>&gt;</span>");</span><br><span class="line">    PrintWriter outer = response.getWriter(); //获得输出流对象，</span><br><span class="line">    // response对象获得的writer对象输出打印时提前于内置out对象</span><br><span class="line">    outer.println("response对象生成的输出流outer对象");</span><br><span class="line">    out.print("<span class="tag">&lt;<span class="name">br</span>&gt;</span>");</span><br><span class="line">    out.print("<span class="tag">&lt;<span class="name">h1</span>&gt;</span>response内置对象<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>");</span><br><span class="line">    out.print("<span class="tag">&lt;<span class="name">hr</span>&gt;</span>");</span><br><span class="line">    out.flush();</span><br><span class="line">    PrintWriter outer1 = response.getWriter(); //获得输出流对象，</span><br><span class="line">    // response对象获得的writer对象输出打印时提前于内置out对象</span><br><span class="line">    outer.println("response对象生成的输出流outer对象");</span><br><span class="line">//    response.sendRedirect("request.jsp");  //请求重定向</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><br> <strong>预览效果：</strong><br> <img src="/images/jspStudy/response.png" alt="图片加载失败"><br> 4. <strong>session：</strong> 客户端与服务器的一次对话，从第一次打开客户端到其完全关闭的一段时间。<br> <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>session内置对象<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>session内置对象<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">        <span class="attr">SimpleDateFormat</span> <span class="attr">sdf</span> = <span class="string">new</span> <span class="attr">SimpleDateFormat</span>("<span class="attr">yyy</span>年<span class="attr">MM</span>月<span class="attr">dd</span>日 <span class="attr">HH:mm:ss</span>");</span></span><br><span class="line"><span class="tag">        <span class="attr">Date</span> <span class="attr">d</span> = <span class="string">new</span> <span class="attr">Date</span>(<span class="attr">session.getCreationTime</span>());</span></span><br><span class="line"><span class="tag">    %&gt;</span></span><br><span class="line">    Session创建时间：<span class="tag">&lt;<span class="name">%=sdf.format(d)%</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    Session的ID编号：<span class="tag">&lt;<span class="name">%=session.getId()%</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br> <strong>预览效果：</strong><br> <img src="/images/jspStudy/session.png" alt="图片加载失败"><br> 5. <strong>application：</strong> 实现用户间数据的共享，可存放全局变量。开始于服务器的启动，终止于服务器的关闭。在用户的前后链接或不同用户之间的连接中，可以对application对象的同意属性进行操作。<br> <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">"java.util.Enumeration"</span> %&gt;</span><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>application内置对象<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>application内置对象<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">        <span class="attr">application.setAttribute</span>("<span class="attr">city</span>", "北京");</span></span><br><span class="line"><span class="tag">        <span class="attr">application.setAttribute</span>("<span class="attr">postcode</span>", "<span class="attr">10000</span>");</span></span><br><span class="line"><span class="tag">        <span class="attr">application.setAttribute</span>("<span class="attr">email</span>", "<span class="attr">lisi</span>@<span class="attr">163.com</span>");</span></span><br><span class="line"><span class="tag">    %&gt;</span></span><br><span class="line">    所在的城市：<span class="tag">&lt;<span class="name">%=application.getAttribute("city")%</span>&gt;</span></span><br><span class="line">    中的属性有：<span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">        <span class="attr">Enumeration</span> <span class="attr">attributes</span> = <span class="string">application.getAttributeNames();</span></span></span><br><span class="line"><span class="tag">        <span class="attr">while</span> (<span class="attr">attributes.hasMoreElements</span>())</span></span><br><span class="line"><span class="tag">        &#123;</span></span><br><span class="line"><span class="tag">            <span class="attr">out.println</span>(<span class="attr">attributes.nextElement</span>()+"&amp;<span class="attr">nbsp</span>&amp;<span class="attr">nbsp</span>");</span></span><br><span class="line"><span class="tag">        &#125;</span></span><br><span class="line"><span class="tag">    %&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    JSP(SERVLET)引擎名及版本号：<span class="tag">&lt;<span class="name">%=application.getServerInfo()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br> <strong>预览效果：</strong><br> <img src="/images/jspStudy/application.png" alt="图片加载失败"></p>
<h6 id="不常用的"><a href="#不常用的" class="headerlink" title="不常用的:"></a>不常用的:</h6><ol start="6">
<li><strong>page：</strong> 当前JSP页面本身，有点像类中的this指针。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>page内置对象<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>page内置对象<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    当前page页面对象的字符串描述：<span class="tag">&lt;<span class="name">%=page.toString()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<p><strong>预览效果：</strong><br><img src="/images/jspStudy/page.png" alt="图片加载失败"><br>7. <strong>pageContext ：</strong> 提供了对JSP页面内所有的对象及名字空间的访问。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>pageContext<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>pageContext内置对象<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    session_page1中的用户名是：<span class="tag">&lt;<span class="name">%=pageContext.getSession().getAttribute("username")%</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">        //跳转到注册页面</span></span><br><span class="line"><span class="tag">        //<span class="attr">pageContext.forward</span>("<span class="attr">reg.jsp</span>");</span></span><br><span class="line"><span class="tag">        //一个页面包含另一个页面</span></span><br><span class="line"><span class="tag">        <span class="attr">pageContext.include</span>("<span class="attr">include.jsp</span>");</span></span><br><span class="line"><span class="tag">    %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><em>include.jsp</em></p>
<h6 id="includ指令"><a href="#includ指令" class="headerlink" title="includ指令"></a>includ指令</h6><p><code>&lt;%@include file=&quot;URL&quot;%&gt;</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">"java.util.Date"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">"ja&lt;%@ page contentType="</span><span class="attr">text</span>/<span class="attr">html</span>;<span class="attr">charset</span>=<span class="string">UTF-8</span>" <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">    <span class="attr">String</span> <span class="attr">path</span> = <span class="string">request.getContextPath();</span></span></span><br><span class="line"><span class="tag">    <span class="attr">String</span> <span class="attr">basePath</span> = <span class="string">request.getScheme()+</span>"<span class="attr">:</span>//"+<span class="attr">request.getServerName</span>()+"<span class="attr">:</span>"+<span class="attr">request.getServerPort</span>()+<span class="attr">path</span>+"/";</span></span><br><span class="line"><span class="tag">    <span class="attr">Date</span> <span class="attr">date</span> = <span class="string">new</span> <span class="attr">Date</span>();</span></span><br><span class="line"><span class="tag">    <span class="attr">SimpleDateFormat</span> <span class="attr">sdf</span> = <span class="string">new</span> <span class="attr">SimpleDateFormat</span>("<span class="attr">yyyy</span>年<span class="attr">MM</span>月<span class="attr">dd</span>日");</span></span><br><span class="line"><span class="tag">    <span class="attr">String</span> <span class="attr">s</span> = <span class="string">sdf.format(date);</span></span></span><br><span class="line">    out.println(s+"&lt;br&gt;");</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>
<p><strong>预览效果：</strong><br><img src="/images/jspStudy/pageContext.png" alt="图片加载失败"><br>8. <strong>exception：</strong> 是一个异常对象，当一个页面在运行过程中发生了异常，就产生这个对象。如果一个jsp页面要应用此对象，就必须把isErrorPage设定为true，否则无法编译。<br>想要查看该内置对象的实际效果，创建一个exception.jsp文件：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">isErrorPage</span>=<span class="string">"true"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>exception<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>exception内置对象<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    异常消息是：<span class="tag">&lt;<span class="name">%=exception.getMessage()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    异常的字符串描述：<span class="tag">&lt;<span class="name">%=exception.toString()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>通过exception测试页面来查看（需要新建一个exceptionTest.jsp）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">errorPage</span>=<span class="string">"exception.jsp"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>exceptionTest<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>测试异常的页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">        //在最上方添加<span class="attr">errorPage</span>=<span class="string">"exceptionTest.jsp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">System.out.println</span>(<span class="attr">100</span>/<span class="attr">0</span>); //抛出异常</span></span><br><span class="line"><span class="tag">    %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>预览效果：</strong><br><img src="/images/jspStudy/exception.png" alt="图片加载失败"><br>9. <strong>config：</strong> 在Servlet初始化时，jsp引擎向它传递信息用的，此信息包括Servlet初始化时需要用到的参数（通过属性名和属性值构成）以及服务器的有关信息（通过传递一个ServletContext对象）。<br>​    <strong>请求重定向：</strong> 客户端行为，response.sendRedirect()，从本质上讲等同于两次请求，前一次的请求对象不会保存，地址栏的URL地址会改变。<br>​    <strong>请求转发：</strong> 服务器行为，request.getRequestDispatcher().forward(req,resp)，是一次请求，转发后请求对象保存，地址栏的URL地址不会改变。</p>
<h4 id="include指令和include动作标签"><a href="#include指令和include动作标签" class="headerlink" title="include指令和include动作标签"></a>include指令和include动作标签</h4><h6 id="includ指令-1"><a href="#includ指令-1" class="headerlink" title="includ指令"></a><a href="#includ指令">includ指令</a></h6><h6 id="include动作标签"><a href="#include动作标签" class="headerlink" title="include动作标签"></a>include动作标签</h6><p><code>&lt;jsp:include page=&quot;URL&quot; flush=&quot;true|false&quot; /&gt;</code></p>
<ul>
<li><strong>page：</strong> 要包含的页面</li>
<li><strong>flush：</strong> 被包含的页面是否从缓冲区读取(默认为false)</li>
</ul>
<p><em>include_action.jsp</em> 文件：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>includeAction<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>include动作<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jsp:include</span> <span class="attr">page</span>=<span class="string">"date.jsp"</span> <span class="attr">flush</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><em>date.jsp</em> 文件：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">import</span>=<span class="string">"java.util.*"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@page</span> <span class="attr">import</span>=<span class="string">"java.text.*"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Date</span> <span class="attr">d</span> = <span class="string">new</span> <span class="attr">Date</span>();</span></span><br><span class="line"><span class="tag">    <span class="attr">SimpleDateFormat</span> <span class="attr">sdf</span> = <span class="string">new</span> <span class="attr">SimpleDateFormat</span>("<span class="attr">yyyy</span>年<span class="attr">MM</span>月<span class="attr">dd</span>日");</span></span><br><span class="line"><span class="tag">    <span class="attr">String</span> <span class="attr">s</span> = <span class="string">sdf.format(d);</span></span></span><br><span class="line"><span class="tag">    <span class="attr">out.println</span>(<span class="attr">s</span>);</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>预览效果：</strong><br><img src="/images/jspStudy/include_action.png" alt="图片加载失败"></p>
<h6 id="include指令和include动作比较"><a href="#include指令和include动作比较" class="headerlink" title="include指令和include动作比较"></a>include指令和include动作比较</h6><table>
<thead>
<tr>
<th></th>
<th align="center">includ指令</th>
<th align="center">jsp:include动作</th>
</tr>
</thead>
<tbody><tr>
<td>语法格式</td>
<td align="center">&lt;%@ include file=”..” %&gt;</td>
<td align="center">&lt;jsp:include page=”..” &gt;</td>
</tr>
<tr>
<td>发生作用的时间</td>
<td align="center">页面转换期间</td>
<td align="center">请求期间</td>
</tr>
<tr>
<td>包含的内容</td>
<td align="center">文件的实际内容</td>
<td align="center">页面的输出</td>
</tr>
<tr>
<td>转换成的Servlet</td>
<td align="center">主页面和包含页面转换为一个Servlet</td>
<td align="center">主页面和包含页面转换为独立的Servlet</td>
</tr>
<tr>
<td>编译时间</td>
<td align="center">较慢——资源必须被解析</td>
<td align="center">较快</td>
</tr>
<tr>
<td>执行时间</td>
<td align="center">稍快</td>
<td align="center">较慢——每次资源必须被解析</td>
</tr>
</tbody></table>
<h4 id="forward动作"><a href="#forward动作" class="headerlink" title="forward动作"></a>forward动作</h4><p><strong>语法：</strong><br><code>&lt;jsp:forward page=&quot;URL&quot; /&gt;</code><br><strong>等同于：</strong><br><code>request.getRequestDispatcher(&quot;/url&quot;).forward(request,response);</code><br>首先创建<em>login.jsp</em>文件,将action提交给<em>forward.jsp</em>处理：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>系统登陆<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">"loginForm"</span> <span class="attr">action</span>=<span class="string">"forward.jsp"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登陆"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>创建<em>forward.jsp</em>文件，使用forward动作提交给<em>user.jsp</em>进行处理：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>forward动作<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jsp:include</span> <span class="attr">page</span>=<span class="string">"user.jsp"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><em>user.jsp</em> 文件用于获取用户登陆信息：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>用户资料<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>用户资料<span class="tag">&lt;/<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">request.setCharacterEncoding</span>("<span class="attr">utf-8</span>");%&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">        <span class="attr">String</span> <span class="attr">username</span> = <span class="string">""</span>;</span></span><br><span class="line"><span class="tag">        <span class="attr">String</span> <span class="attr">password</span> = <span class="string">""</span>;</span></span><br><span class="line"><span class="tag">        <span class="attr">if</span> (<span class="attr">request.getParameter</span>("<span class="attr">username</span>")!=<span class="string">null)&#123;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">username</span> = <span class="string">request.getParameter(</span>"<span class="attr">username</span>");</span></span><br><span class="line"><span class="tag">        &#125;</span></span><br><span class="line"><span class="tag">        <span class="attr">if</span> (<span class="attr">request.getParameter</span>("<span class="attr">password</span>")!=<span class="string">null)&#123;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">password</span> = <span class="string">request.getParameter(</span>"<span class="attr">password</span>");</span></span><br><span class="line"><span class="tag">        &#125;</span></span><br><span class="line"><span class="tag">    %&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">%=username</span> %&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">%=password</span> %&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>预览效果：</strong><br><img src="/images/jspStudy/forward.png" alt="图片加载失败"></p>
<h4 id="param动作"><a href="#param动作" class="headerlink" title="param动作"></a>param动作</h4><p><code>&lt;jsp:param name=&quot;参数名&quot; value=&quot;参数值&quot;&gt;</code><br>常常和&lt;jsp:forward &gt;一起使用，作为其子标签。<br>将<em>login.jsp<em>中的action对象</em>forward.jsp<em>改为</em>dologin.jsp</em>,然后新建一个<em>dologin.jsp</em>文件：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jsp:forward</span> <span class="attr">page</span>=<span class="string">"user.jsp"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jsp:param</span> <span class="attr">value</span>=<span class="string">"admin@163.com"</span> <span class="attr">name</span>=<span class="string">"email"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">jsp:forward</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>在<em>user.jsp</em>文件中加入以下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">String email &#x3D; &quot;&quot;;</span><br><span class="line"></span><br><span class="line">if (request.getParameter(&quot;email&quot;)!&#x3D;null)&#123;</span><br><span class="line">           email &#x3D; request.getParameter(&quot;email&quot;);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">电子邮箱：&lt;%&#x3D;email %&gt;</span><br></pre></td></tr></table></figure>
<p>该过程是为了演示param的作用,虽然用户登陆时提交的表单信息中没有<em>email</em>内容，但是用过param可以进行赋值。<br><strong>预览效果：</strong><br><img src="/images/jspStudy/param.png" alt="图片加载失败"></p>
<h4 id="Cookie：是web服务器保存在客户端的一系列文本信息。"><a href="#Cookie：是web服务器保存在客户端的一系列文本信息。" class="headerlink" title="Cookie：是web服务器保存在客户端的一系列文本信息。"></a>Cookie：是web服务器保存在客户端的一系列文本信息。</h4><p>典型应用一：判定注册用户是否已经登陆网站。<br>典型应用二:“购物车”的处理。<br>生活中Cookie的应用：浏览记录、记住用户名和密码实现自动登录</p>
<h6 id="Cookie的作用："><a href="#Cookie的作用：" class="headerlink" title="Cookie的作用："></a>Cookie的作用：</h6><ul>
<li>对特定对象的追踪</li>
<li>保存用户网页浏览记录与习惯</li>
<li>简化登录<br>安全风险：容易泄露用户信息<h6 id="jsp中创建和使用Cookie"><a href="#jsp中创建和使用Cookie" class="headerlink" title="jsp中创建和使用Cookie"></a>jsp中创建和使用Cookie</h6>创建Cookie对象<br><code>Cookie newCookie = new Cookie(String key, Object value);</code><br>写入Cookie对象<br><code>response.addCookie(newCookie);</code><br>读取Cookie对象<br><code>Cookie[] cookie = request.getCookies();</code></li>
</ul>
<p><strong>常用方法：</strong></p>
<table>
<thead>
<tr>
<th>方法名称</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>void setMaxAge(int expiry)</td>
<td>设置cookie的有效期，单位是秒</td>
</tr>
<tr>
<td>void setValue(String vlaue)</td>
<td>在cookie创建后，对cookie进行赋值</td>
</tr>
<tr>
<td>String setName()</td>
<td>获取cookie的名称</td>
</tr>
<tr>
<td>String grtValue()</td>
<td>获取cookie的值</td>
</tr>
<tr>
<td>int getMaxAge()</td>
<td>获取cookie的有效时间，单位是秒</td>
</tr>
</tbody></table>
<h6 id="项目案例"><a href="#项目案例" class="headerlink" title="项目案例"></a>项目案例</h6><ul>
<li><p>登陆界面：<em>login.jsp</em></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">import</span>=<span class="string">"java.net.*"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>用户登录<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">        <span class="attr">request.setCharacterEncoding</span>("<span class="attr">utf-8</span>");</span></span><br><span class="line"><span class="tag">        <span class="attr">String</span> <span class="attr">username</span> = <span class="string">""</span>;</span></span><br><span class="line"><span class="tag">        <span class="attr">String</span> <span class="attr">password</span> = <span class="string">""</span>;</span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">        <span class="attr">Cookie</span>[] <span class="attr">cookies</span> = <span class="string">request.getCookies();</span></span></span><br><span class="line"><span class="tag">        <span class="attr">if</span> (<span class="attr">cookies</span>!=<span class="string">null&amp;&amp;cookies.length</span>&gt;</span>0)&#123;</span><br><span class="line">            for (Cookie c:cookies)&#123;</span><br><span class="line">                if (c.getName().equals("username"))&#123;</span><br><span class="line">                    username = URLDecoder.decode(c.getValue(), "utf-8");</span><br><span class="line">                &#125;</span><br><span class="line">                if (c.getName().equals("password"))&#123;</span><br><span class="line">                    password = URLDecoder.decode(c.getValue(), "utf-8");</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">"loginForm"</span> <span class="attr">action</span>=<span class="string">"dologin.jsp"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"&lt;%=username %&gt;"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"&lt;%=password %&gt;"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"isCookie"</span> <span class="attr">checked</span>=<span class="string">"checked"</span> /&gt;</span>十天内记住我的登陆状态<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登陆"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>登陆处理：<em>dologin.jsp</em></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">import</span>=<span class="string">"java.net.*"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>登陆成功<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">        <span class="attr">request.setCharacterEncoding</span>("<span class="attr">utf-8</span>");</span></span><br><span class="line"><span class="tag">        //先判断是否选择了记住登陆状态</span></span><br><span class="line"><span class="tag">        <span class="attr">String</span>[] <span class="attr">isCookie</span> = <span class="string">request.getParameterValues(</span>"<span class="attr">isCookie</span>");</span></span><br><span class="line"><span class="tag">        <span class="attr">if</span> (<span class="attr">isCookie</span>!=<span class="string">null&amp;&amp;isCookie.length</span>&gt;</span>0)&#123;</span><br><span class="line">            // 把用户名和密码保存在Cookie对象中</span><br><span class="line">            // 使用URLEncoder.encode()方法将Cookie中用户名或者密码的中文进行编码</span><br><span class="line">            String username = URLEncoder.encode(request.getParameter("username"), "utf-8");</span><br><span class="line">            String password = URLEncoder.encode(request.getParameter("password"), "utf-8");</span><br><span class="line"></span><br><span class="line">            Cookie usernameCookie = new Cookie("username", username);</span><br><span class="line">            Cookie passwordCookie = new Cookie("password", password);</span><br><span class="line"></span><br><span class="line">            // 设置Cookie最大生存时间</span><br><span class="line">            usernameCookie.setMaxAge(486000);</span><br><span class="line">            passwordCookie.setMaxAge(486000);</span><br><span class="line"></span><br><span class="line">            // 将数据保存到Cookie对象中</span><br><span class="line">            response.addCookie(usernameCookie);</span><br><span class="line">            response.addCookie(passwordCookie);</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            // 不勾选记住登陆状态时的操作</span><br><span class="line">            Cookie[] cookies = request.getCookies();</span><br><span class="line">            if (cookies!=null&amp;&amp;cookies.length&gt;0)&#123;</span><br><span class="line">                for (Cookie c:cookies)&#123;</span><br><span class="line">                    if (c.getName().equals("username")||c.getName().equals("password"))&#123;</span><br><span class="line">                        c.setMaxAge(0);// 设置cookie失效</span><br><span class="line">                        response.addCookie(c);//重新保存</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"users.jsp"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>查看用户信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>用户界面：<em>users.jsp</em></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">import</span>=<span class="string">"java.net.*"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>用户信息<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">        <span class="attr">request.setCharacterEncoding</span>("<span class="attr">utf-8</span>");</span></span><br><span class="line"><span class="tag">        <span class="attr">String</span> <span class="attr">username</span> = <span class="string">""</span>;</span></span><br><span class="line"><span class="tag">        <span class="attr">String</span> <span class="attr">password</span> = <span class="string">""</span>;</span></span><br><span class="line"><span class="tag">        <span class="attr">Cookie</span>[] <span class="attr">cookies</span> = <span class="string">request.getCookies();</span></span></span><br><span class="line"><span class="tag">        <span class="attr">if</span> (<span class="attr">cookies</span>!=<span class="string">null&amp;&amp;cookies.length</span>&gt;</span>0)&#123;</span><br><span class="line">            for (Cookie c:cookies)&#123;</span><br><span class="line">                if (c.getName().equals("username"))&#123;</span><br><span class="line">                    // 解码</span><br><span class="line">                    username = URLDecoder.decode(c.getValue(), "utf-8");</span><br><span class="line">                &#125;</span><br><span class="line">                if (c.getName().equals("password"))&#123;</span><br><span class="line">                    password = URLDecoder.decode(c.getValue(), "utf-8");</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">%=username</span> %&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">%=password</span> %&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>首先我们来看一下登陆界面（由于测试的目标仅是Cookie的作用，并未涉及到登陆验证）<br><img src="/images/jspStudy/login_Cookie.png" alt="图片加载失败"><br>由于这是第一次启动该项目，表单中并没有数据。我们填入相应信息，取消勾选记住登陆状态，然后尝试登陆-点击“查看用户信息”。弹出的页面并未显示用户数据：<br><img src="/images/jspStudy/userInfo1.png" alt="图片加载失败"><br>关闭浏览器客户端，再次打开登陆界面：<br><img src="/images/jspStudy/login_Cookie.png" alt="图片加载失败"><br>重新填写登录信息，此次勾选记住登陆状态，重复上述步骤：<br><img src="/images/jspStudy/userInfo2.png" alt="图片加载失败"><br>重新打开的登陆界面包含了上次登录的用户信息：<br><img src="/images/jspStudy/login_Cookie2.png" alt="图片加载失败"></p>
</li>
</ul>
<h6 id="Session和Cookie对比"><a href="#Session和Cookie对比" class="headerlink" title="Session和Cookie对比"></a>Session和Cookie对比</h6><table>
<thead>
<tr>
<th>Session</th>
<th>Cookie</th>
</tr>
</thead>
<tbody><tr>
<td>在<strong>服务器端</strong>保存用户信息</td>
<td>在<strong>客户端</strong>保存用户信息</td>
</tr>
<tr>
<td>Session中保存的是<strong>Object</strong>类型</td>
<td>Cookie保存的是<strong>String</strong>类型</td>
</tr>
<tr>
<td>随会话的结束而将其存储的数据<strong>销毁</strong></td>
<td>可以<strong>长期</strong>保存在客户端</td>
</tr>
<tr>
<td>保存<strong>重要</strong>信息</td>
<td>保存<strong>不重要</strong>的用户信息</td>
</tr>
</tbody></table>
<h2 id="JavaBean"><a href="#JavaBean" class="headerlink" title="JavaBean"></a>JavaBean</h2><p>Javabeans就是符合某种特定的规范的Java类。使用Javabeans的好处是解决代码重复编写，减少代码冗余，功能区分明确，提高了代码的维护性。</p>
<h4 id="设计原则"><a href="#设计原则" class="headerlink" title="设计原则"></a>设计原则</h4><ul>
<li>公有类</li>
<li>无参的公有构造方法</li>
<li>属性私有</li>
<li>getter和setter方法<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//公有类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Students</span></span>&#123;</span><br><span class="line">    <span class="comment">//属性私有</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">	<span class="comment">//无参的公有构造方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Students</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="comment">//getter和setter方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span></span>&#123;<span class="keyword">this</span>.name=name;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> <span class="keyword">this</span>.name;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span></span>&#123;<span class="keyword">this</span>.age=age;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> <span class="keyword">this</span>.age;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="什么是JSP动作"><a href="#什么是JSP动作" class="headerlink" title="什么是JSP动作"></a>什么是JSP动作</h4>JSP动作元素（action elements），动作元素为请求处理阶段提供信息。动作元素遵循XML元素的语法，有一个包含元素名的开始标签，可以有属性、可选内容、与开始标签匹配的结束标签。</li>
<li>第一类是与存取JavaBean有关的，包括：<br> &lt;jsp:useBean&gt; &lt;jsp:setProperty&gt;&lt;jsp:getProperty&gt;</li>
<li>第二类是JSP1.2就看似是有的基本元素，包括6个动作元素：<br>&lt;jsp:include&gt;&lt;jsp:forward&gt;&lt;jsp:param&gt;&lt;jsp:plugin&gt;&lt;jsp:params&gt;&lt;jsp:fallback&gt;</li>
<li>第三类是JSP2.0新增加的元素，主要与JSP Document有关，包括6个元素：<br>&lt;jsp:root&gt;&lt;jsp:declaration&gt;&lt;jsp:scriptlet&gt;&lt;jsp:expression&gt;&lt;jsp:text&gt;&lt;jsp:output&gt;</li>
<li>第四类是JSP2.0新增的动作元素，主要用来动态生成XML元素标签的值，包括3个动作：<br>&lt;jsp:attribute&gt;&lt;jsp:body&gt;&lt;jsp:element&gt;</li>
<li>第五类是JSP2.0新增的动作元素，主要是用在Tag File中，有2个元素：<br>&lt;jsp:invoke&gt;&lt;jsp:dobody<h6 id="1-用普通方式创建JavaBean实例："><a href="#1-用普通方式创建JavaBean实例：" class="headerlink" title="1.用普通方式创建JavaBean实例："></a>1.用普通方式创建JavaBean实例：</h6></li>
<li>首先在src下建立实体类</li>
<li>在jsp文件中使用page指令import实体类<br>用户实体类：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.po;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
使用内置对象调用JavaBean实例中的属性<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">"com.po.User"</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>使用普通方式创建JavaBean的实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">      <span class="attr">User</span> <span class="attr">user</span> = <span class="string">new</span> <span class="attr">User</span>();</span></span><br><span class="line"><span class="tag">      <span class="attr">user.setUsername</span>("<span class="attr">admin</span>");</span></span><br><span class="line"><span class="tag">      <span class="attr">user.setPassword</span>("<span class="attr">123456</span>");</span></span><br><span class="line"><span class="tag">    %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>使用普通方式创建JavaBean的实例<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">%=user.getUsername()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">%=user.getPassword()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<p><strong>预览效果：</strong><br><img src="/images/jspStudy/index.png" alt="图片加载失败"></p>
<h6 id="2-在jsp页面中通常使用jsp动作标签使用JavaBean，常用的有以下三个："><a href="#2-在jsp页面中通常使用jsp动作标签使用JavaBean，常用的有以下三个：" class="headerlink" title="2.在jsp页面中通常使用jsp动作标签使用JavaBean，常用的有以下三个："></a>2.在jsp页面中通常使用jsp动作标签使用JavaBean，常用的有以下三个：</h6><ol>
<li><strong>useBeans</strong><br><code>&lt;jsp:userBean id=&quot;标识符&quot; class=&quot;java&quot; scope=&quot;作用范围&quot; /&gt;</code><ul>
<li><strong>&lt;jsp:</strong>：表示这是jsp动作元素</li>
<li><strong>useBean</strong>：表示这是一个useBean标签</li>
<li><strong>id</strong>：所实例化的JavaBeans唯一标识符</li>
<li><strong>class</strong>：所用到的是哪个Java类，包括包名和类名</li>
<li><strong>scope</strong>：该标签的作用范围<br>使用useBeans动作创建JavaBean的实例,但是由于实体类中并未给属性赋值，故此处输出的属性值为null。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>使用useBeans动作创建JavaBean的实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jsp:useBean</span> <span class="attr">id</span>=<span class="string">"myUsers"</span> <span class="attr">class</span>=<span class="string">"com.po.User"</span> <span class="attr">scope</span>=<span class="string">"page"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>使用useBeans动作创建JavaBean的实例<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">%=myUsers.getUsername()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">%=myUsers.getPassword()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ol>
<p><strong>预览效果：</strong><br>    <img src="/images/jspStudy/useBean.png" alt="图片加载失败"><br>2. <strong>setProperty</strong><br>  作用：给已经实例化的JavaBean对象的属性赋值，一共有四种形式：<br>    1. <code>&lt;jsp:serProperty name=&quot;JavaBean实例名&quot; property=&quot;*&quot; /&gt;</code>（跟表单关联）<br>    2. <code>&lt;jsp:serProperty name=&quot;JavaBean实例名&quot; property=&quot;JavaBean属性名&quot; /&gt;</code>（跟表单关联）<br>    3. <code>&lt;jsp:serProperty name=&quot;JavaBean实例名&quot; property=&quot;JavaBean属性名&quot; value=&quot;BeanValue&quot;/&gt;</code>（手工设置）<br>    4. <code>&lt;jsp:serProperty name=&quot;JavaBean实例名&quot; property=&quot;propertyName&quot; param=&quot;request对象中的参数名&quot; /&gt;</code>（跟request参数关联）<br>在演示setProperty的使用效果时，我们首先建立一个带有表单的登陆系统：<em>login.jsp</em><br><strong>property=”*”，表示此时的属性从表单中进行匹配。</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>登陆系统<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">"login"</span> <span class="attr">action</span>=<span class="string">"dologin.jsp?mypass=999999"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登陆"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>预览效果：</strong><br><img src="/images/jspStudy/login.png" alt="图片加载失败"><br>用户通过登陆界面输入登陆所需信息，而登陆的逻辑操作由<em>dologin.jsp</em>完成：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jsp:useBean</span> <span class="attr">id</span>=<span class="string">"myUsers"</span> <span class="attr">class</span>=<span class="string">"com.po.User"</span> <span class="attr">scope</span>=<span class="string">"page"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>setProperty动作元素使用方法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  根据表单自动匹配所有的属性  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jsp:setProperty</span> <span class="attr">name</span>=<span class="string">"myUsers"</span> <span class="attr">property</span>=<span class="string">"*"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  使用传统表达式方式获取用户名和密码  --&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">%=myUsers.getUsername()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">%=myUsers.getPassword()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>然后在登陆界面提交登录信息（用户名：root 密码：123456），就能获得如下页面：<br><img src="/images/jspStudy/setProperty01.png" alt="图片加载失败"><br><strong>property=”JavaBean属性名”，表示此时的属性由JavaBean进行指定，只获取指定的属性值。</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--  根据表单匹配部分属性  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">jsp:setProperty</span> <span class="attr">name</span>=<span class="string">"myUsers"</span> <span class="attr">property</span>=<span class="string">"username"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>由于代码中未曾指定password这一属性，输出的结果只有用户名：<br><img src="/images/jspStudy/setProperty02.png" alt="图片加载失败"><br><strong>property=”JavaBean属性名” value=”BeanValue”,该方法在赋值时由value的值决定，并不会使用表单中的值。</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--  跟表单无关，通过手工赋值给属性  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">jsp:setProperty</span> <span class="attr">name</span>=<span class="string">"myUsers"</span> <span class="attr">property</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"李四"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">jsp:setProperty</span> <span class="attr">name</span>=<span class="string">"myUsers"</span> <span class="attr">property</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"888888"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>此处对”username”和”password”分别赋值为”李四”和”888888”,输出的结果就不会再是”root”和”123456”了。<br><img src="/images/jspStudy/setProperty03.png" alt="图片加载失败"><br><strong>property=”propertyName” param=”request对象中的参数名”,此方法可以使用URL传参进行赋值。</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--   通过URL传参数给属性赋值 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jsp:setProperty</span> <span class="attr">name</span>=<span class="string">"myUsers"</span> <span class="attr">property</span>=<span class="string">"username"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jsp:setProperty</span> <span class="attr">name</span>=<span class="string">"myUsers"</span> <span class="attr">property</span>=<span class="string">"password"</span> <span class="attr">param</span>=<span class="string">"mypass"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p><em>login.jsp</em> 文件中<code>action=&quot;dologin.jsp?mypass=999999&quot;</code>,通过URL把密码”999999”进行传递：<br><img src="/images/jspStudy/setProperty04.png" alt="图片加载失败"><br>3. <strong>getProperty</strong><br>  作用：获取指定JavaBean对象的属性值<br>  <code>&lt;jsp:getProperty name=&quot;JavaBean实例名&quot; property=属性名 /&gt;</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--  使用getProperty方法获取用户名和密码  --&gt;</span></span><br><span class="line">  用户名：<span class="tag">&lt;<span class="name">jsp:getProperty</span> <span class="attr">name</span>=<span class="string">"myUsers"</span> <span class="attr">property</span>=<span class="string">"username"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  密码：<span class="tag">&lt;<span class="name">jsp:getProperty</span> <span class="attr">name</span>=<span class="string">"myUsers"</span> <span class="attr">property</span>=<span class="string">"password"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/images/jspStudy/getProperty01.png" alt="图片加载失败"></p>
<h6 id="3-JavaBean的四个作用范围"><a href="#3-JavaBean的四个作用范围" class="headerlink" title="3.JavaBean的四个作用范围:"></a>3.JavaBean的四个作用范围:</h6><p>使用JavaBeans的scope属性可以用来指定JavaBean的作用范围。</p>
<ul>
<li>page：仅在当前页面有效。</li>
<li>request：可通过HttpRequest.getAttribute()方法取得JavaBean对象。</li>
<li>session：可通过HttpSession.getAttribute()方法取得JavaBean对象。</li>
<li>application：可通过application.getAttribute()方法取得JavaBean对象。<br>为了方便进行演示，在<em>login.jsp</em>文件中添加一个超链接:<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"testScope.jsp"</span>&gt;</span>测试scope四个作用于范围<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
并且新建一个<em>testScope.jsp</em>文件，<strong>将<em>dologin.jsp</em>文件中的”scope”属性改为”application”</strong> 来查看效果:<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">"com.po.User"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>TestScope<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>JavaBean的四个作用于范围<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jsp:useBean</span> <span class="attr">id</span>=<span class="string">"myUsers"</span> <span class="attr">class</span>=<span class="string">"com.po.User"</span> <span class="attr">scope</span>=<span class="string">"application"</span> /&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">jsp:getProperty</span> <span class="attr">name</span>=<span class="string">"myUsers"</span> <span class="attr">property</span>=<span class="string">"username"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">jsp:getProperty</span> <span class="attr">name</span>=<span class="string">"myUsers"</span> <span class="attr">property</span>=<span class="string">"password"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--  使用内置对象获取  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  application  --&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">%=((User)application.getAttribute("myUsers")).getUsername()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">%=((User)application.getAttribute("myUsers")).getPassword()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<p><strong>预览效果：</strong><br><img src="/images/jspStudy/scope_application.png" alt="图片加载失败"><br><strong>将<em>dologin.jsp</em>和<em>testScope.jsp</em>文件中的”scope”属性改为”session”</strong> 来查看效果:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--  session  --&gt;</span></span><br><span class="line">  用户名：<span class="tag">&lt;<span class="name">%=((User)session.getAttribute("myUsers")).getUsername()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  密码：<span class="tag">&lt;<span class="name">%=((User)session.getAttribute("myUsers")).getPassword()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>预览效果：</strong><br><img src="/images/jspStudy/scope_session.png" alt="图片加载失败"><br><strong>将<em>dologin.jsp</em>和<em>testScope.jsp</em>文件中的”scope”属性改为”request”</strong> 来查看效果:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--  request  --&gt;</span></span><br><span class="line"> 用户名：<span class="tag">&lt;<span class="name">%=((User)request.getAttribute("myUsers")).getUsername()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"> 密码：<span class="tag">&lt;<span class="name">%=((User)request.getAttribute("myUsers")).getPassword()%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>预览效果：</strong><br><img src="/images/jspStudy/scope_request.png" alt="图片加载失败"><br><strong>将<em>dologin.jsp</em>和<em>testScope.jsp</em>文件中的”scope”属性改为”page”</strong> 来查看效果:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--  page  --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">       <span class="attr">String</span> <span class="attr">username</span> = <span class="string">""</span>;</span></span><br><span class="line"><span class="tag">       <span class="attr">String</span> <span class="attr">password</span> = <span class="string">""</span>;</span></span><br><span class="line"><span class="tag">       <span class="attr">if</span> (<span class="attr">pageContext.getAttribute</span>("<span class="attr">myUsers</span>")!=<span class="string">null)&#123;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">username</span> = <span class="string">((User)pageContext.getAttribute(</span>"<span class="attr">myUsers</span>"))<span class="attr">.getUsername</span>();</span></span><br><span class="line"><span class="tag">           <span class="attr">password</span> = <span class="string">((User)pageContext.getAttribute(</span>"<span class="attr">myUsers</span>"))<span class="attr">.getPassword</span>();</span></span><br><span class="line"><span class="tag">       &#125;</span></span><br><span class="line"><span class="tag">   %&gt;</span></span><br><span class="line">       用户名：<span class="tag">&lt;<span class="name">%=username%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">       密码：<span class="tag">&lt;<span class="name">%=password%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>预览效果：</strong><br><img src="/images/jspStudy/scope_page.png" alt="图片加载失败"></p>
]]></content>
      <categories>
        <category>JSP课程学习</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>JSP</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown基本语法</title>
    <url>/2020/02/04/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>在文字前添加#，使之成为标题。<br>一个#是一级标题，两个#是二级标题，以此类推到六级标题。<br>注：标准语法一般在#后面跟个空格在写文字。<br><strong>示例：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 这是一级标题</span><br><span class="line">## 这是二级标题</span><br><span class="line">### 这是三级标题</span><br><span class="line">#### 这是四级标题</span><br><span class="line">##### 这是五级标题</span><br><span class="line">###### 这是六级标题</span><br></pre></td></tr></table></figure>
<p>  对应的HTML：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1&gt;这是一级标题&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;h2&gt;这是二级标题&lt;&#x2F;h2&gt;</span><br><span class="line">&lt;h3&gt;这是三级标题&lt;&#x2F;h3&gt;</span><br><span class="line">&lt;h4&gt;这是四级标题&lt;&#x2F;h4&gt;</span><br><span class="line">&lt;h5&gt;这是五级标题&lt;&#x2F;h5&gt;</span><br><span class="line">&lt;h6&gt;这是六级标题&lt;&#x2F;h6&gt;</span><br></pre></td></tr></table></figure>

<h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><p>中间没有空行的连续不断的几行文字被视为一个段落。<br><strong>Markdown：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><br><span class="line">Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure>
<p><strong>对应的HTML:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><br><span class="line">&lt;br&gt;</span><br><span class="line">Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br><span class="line">&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>
<h2 id="行内格式"><a href="#行内格式" class="headerlink" title="行内格式"></a>行内格式</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">文本**加黑**</span><br><span class="line">文本*斜体*</span><br></pre></td></tr></table></figure>
<p><strong>预览：</strong><br>文本<strong>加黑</strong><br>文本<em>斜体</em><br><strong>对应的HTML:</strong>p</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;</span><br><span class="line">  文本</span><br><span class="line">  &lt;strong&gt;加黑&lt;&#x2F;strong&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  文本</span><br><span class="line">  &lt;em&gt;斜体&lt;&#x2F;em&gt;</span><br><span class="line">&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>
<h2 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h2><p><strong>Markdown:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 引用段落一。</span><br><span class="line">&gt;</span><br><span class="line">&gt; 引用段落二。</span><br><span class="line">&gt;&gt; 内嵌引用块段落一。</span><br><span class="line">&gt;</span><br><span class="line">&gt; ### 引用块内的标题</span><br></pre></td></tr></table></figure>
<p><strong>预览</strong></p>
<blockquote>
<p>引用段落一。</p>
<p>引用段落二。</p>
<blockquote>
<p>内嵌引用块段落一。</p>
</blockquote>
<h3 id="引用块内的标题"><a href="#引用块内的标题" class="headerlink" title="引用块内的标题"></a>引用块内的标题</h3></blockquote>
<p><strong>对应的HTML:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;blockquote&gt;</span><br><span class="line">  &lt;p&gt;引用段落一。&lt;&#x2F;p&gt;</span><br><span class="line">  &lt;p&gt;引用段落二。&lt;&#x2F;p&gt;</span><br><span class="line">  &lt;blockquote&gt;</span><br><span class="line">    &lt;p&gt;内嵌引用块段落一。&lt;&#x2F;p&gt;</span><br><span class="line">  &lt;&#x2F;blockquote&gt;</span><br><span class="line">  &lt;h3 id&#x3D;&quot;引用块内的标题&quot;&gt;引用块内的标题&quot;&lt;&#x2F;h3&gt;</span><br><span class="line">&lt;&#x2F;blockquote&gt;</span><br></pre></td></tr></table></figure>
<h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><strong>Markdown:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">行内式[博客](https:&#x2F;&#x2F;1029322685.github.io&#x2F; &quot;Leon&#39;s blog&quot;)链接，带title。</span><br><span class="line">行内式[GitHub](https:&#x2F;&#x2F;github.com&#x2F;1029322685)链接。</span><br><span class="line">引用式[博客][1]链接。</span><br><span class="line">引用式[GitHub][2]链接，带title。</span><br><span class="line"></span><br><span class="line">[1]:https:&#x2F;&#x2F;1029322685.github.io&#x2F;</span><br><span class="line">[2]:https:&#x2F;&#x2F;github.com&#x2F;1029322685 &quot;我的GitHub主页&quot;</span><br></pre></td></tr></table></figure>
<p><strong>预览：</strong><br>行内式<a href="https://1029322685.github.io/" target="_blank" rel="noopener" title="Leon&#39;s blog">博客</a>链接，带title。<br>行内式<a href="https://github.com/1029322685" target="_blank" rel="noopener">GitHub</a>链接。<br>引用式<a href="https://1029322685.github.io/" target="_blank" rel="noopener">博客</a>链接。<br>引用式<a href="https://github.com/1029322685" target="_blank" rel="noopener" title="我的GitHub主页">GitHub</a>链接，带title。</p>
<p><strong>对应的HTML:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;行内式&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;1029322685.github.io&#x2F;&quot; title&#x3D;&quot;Leon&#39;s blog&quot;&gt;博客&lt;&#x2F;a&gt;链接，带title。&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p&gt;行内式&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;github.com&#x2F;1029322685&quot;&gt;GitHub&lt;&#x2F;a&gt;链接。&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p&gt;引用式&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;1## 图片029322685.github.io&#x2F;&quot;&gt;博客&lt;&#x2F;a&gt;链接。&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p&gt;引用式&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;github.com&#x2F;1029322685&quot; title&#x3D;&quot;Leon&#39;s blog&quot;&gt;GitHub&lt;&#x2F;a&gt;链接，带title。&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>在超链接的写法前加一个！就是引用图片的方法。<br><strong>Markdown:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![图片加载失败](&#x2F;images&#x2F;pic01.jpg &quot;pic&quot;)</span><br></pre></td></tr></table></figure>
<p><strong>预览：</strong><br><img src="/images/pic01.jpg" alt="图片加载失败" title="pic"><br><strong>对应的HTML:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;images&#x2F;pic01.jpg&quot; alt&#x3D;&quot;图片加载失败&quot; title&#x3D;&quot;pic&quot;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p><strong>Markdown:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- list one</span><br><span class="line">- list two</span><br><span class="line">- list three</span><br><span class="line"></span><br><span class="line">1. list one</span><br><span class="line">2. list two</span><br><span class="line">3. list three</span><br></pre></td></tr></table></figure>
<p><strong>预览：</strong></p>
<ul>
<li>list one</li>
<li>list two</li>
<li>list three</li>
</ul>
<ol>
<li>list one</li>
<li>list two</li>
<li>list three</li>
</ol>
<p><strong>对应的HTML:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">  &lt;li&gt;list one&lt;&#x2F;li&gt;</span><br><span class="line">  &lt;li&gt;list two&lt;&#x2F;li&gt;</span><br><span class="line">  &lt;li&gt;list three&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br><span class="line">&lt;ol&gt;</span><br><span class="line">  &lt;li&gt;list one&lt;&#x2F;li&gt;</span><br><span class="line">  &lt;li&gt;list two&lt;&#x2F;li&gt;</span><br><span class="line">  &lt;li&gt;list three&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ol&gt;</span><br></pre></td></tr></table></figure>
<p><strong>其中无序列表的标记可以使用 +、- 或 *有序列表前的数字可以是乱序的</strong></p>
<h2 id="水平分割线"><a href="#水平分割线" class="headerlink" title="水平分割线"></a>水平分割线</h2><p>使用一个单独行里的三个或以上 *、- 来生产一条水平分割线，它们之间可以有空格。<br><strong>Markdown:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-----</span><br></pre></td></tr></table></figure>

<h2 id="预览："><a href="#预览：" class="headerlink" title="预览："></a><strong>预览：</strong></h2><p><strong>对应的HTML:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;hr&#x2F;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="转义符"><a href="#转义符" class="headerlink" title="转义符"></a>转义符</h2><p>反斜线\用于插入在 Markdown 语法中有特殊作用的字符。<br>特殊字符包括：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\</span><br><span class="line">&#96;</span><br><span class="line">*</span><br><span class="line">_</span><br><span class="line">&#123;&#125;</span><br><span class="line">[]</span><br><span class="line">()</span><br><span class="line">#</span><br><span class="line">+</span><br><span class="line">-</span><br><span class="line">.</span><br><span class="line">!</span><br></pre></td></tr></table></figure>
<p><strong>Markdown:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这是*演示*文本</span><br><span class="line">这是\*演示\*文本</span><br></pre></td></tr></table></figure>
<p><strong>预览：</strong><br>这是<em>演示</em>文本<br>这是*演示*文本</p>
<h2 id="嵌入HTML"><a href="#嵌入HTML" class="headerlink" title="嵌入HTML"></a>嵌入HTML</h2><p>Markdown 标记语言的目的不是替代 HTML，也不是发明一种更便捷的插入 HTML 标签的方式。它对应的只是 HTML 标签的一个很小的子集。</p>
<p>对于那些没有办法用 Markdown 语法来对应的 HTML 标签，直接使用 HTML 来写就好了。</p>
<h1 id="扩展语法"><a href="#扩展语法" class="headerlink" title="扩展语法"></a>扩展语法</h1><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><p><strong>Markdown:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这就是~~删除线~~</span><br></pre></td></tr></table></figure>
<p><strong>预览：</strong><br>这就是<del>删除线</del></p>
<h2 id="语法高亮"><a href="#语法高亮" class="headerlink" title="语法高亮"></a>语法高亮</h2><p>在上面的代码块语法基础上，在第一组 ``` 之后添加代码的语言，如 ‘javascript’ 或 ‘js’，即可将代码标记为 JavaScript：</p>
<p><strong>预览：</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'window loaded'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。<br><strong>Markdown:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name | age</span><br><span class="line">---- | ---</span><br><span class="line">LearnShare | 12</span><br><span class="line">Mike |  32</span><br></pre></td></tr></table></figure>
<p><strong>预览：</strong></p>
<table>
<thead>
<tr>
<th>name</th>
<th>age</th>
</tr>
</thead>
<tbody><tr>
<td>LearnShare</td>
<td>12</td>
</tr>
<tr>
<td>Mike</td>
<td>32</td>
</tr>
</tbody></table>
<p>为了使Markdown更清晰，| 和 - 两侧需要至少有一个空格（最左侧和最右侧的 | 外就不需要了）。</p>
<h2 id="Task-List"><a href="#Task-List" class="headerlink" title="Task List"></a>Task List</h2><p><strong>Markdown:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- [ ] Eat</span><br><span class="line">- [x] Code</span><br><span class="line">  - [x] HTML</span><br><span class="line">  - [x] CSS</span><br><span class="line">  - [x] JavaScript</span><br><span class="line">- [ ] Sleep</span><br></pre></td></tr></table></figure>
<p><strong>预览：</strong></p>
<ul>
<li><input disabled="" type="checkbox"> Eat</li>
<li><input checked="" disabled="" type="checkbox"> Code<ul>
<li><input checked="" disabled="" type="checkbox"> HTML</li>
<li><input checked="" disabled="" type="checkbox"> CSS</li>
<li><input checked="" disabled="" type="checkbox"> JavaScript</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Sleep</li>
</ul>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>分享</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/02/02/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>新人小白</tag>
      </tags>
  </entry>
</search>
